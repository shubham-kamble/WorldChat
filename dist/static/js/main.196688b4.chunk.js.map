{"version":3,"sources":["Components/SignIn.js","Components/ChatMessage.js","Components/ChatRoom.js","App.js","reportWebVitals.js","index.js"],"names":["SignIn","props","onClick","provider","firebase","auth","GoogleAuthProvider","signInWithPopup","ChatMessage","message","text","uid","photoURL","messageClass","currentUser","className","src","ChatRoom","messagesRef","firestore","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","add","createdAt","FieldValue","serverTimestamp","dummy","current","scrollIntoView","behavior","useRef","map","msg","id","ref","onSubmit","value","onChange","target","type","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useAuthState","user","useEffect","console","log","signOut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAkBeA,MAff,SAAgBC,GAOZ,OACI,qCACI,6CACA,wBAAQC,QARS,WACrB,IAAMC,EAAW,IAAIC,IAASC,KAAKC,mBACnCL,EAAMI,KAAKE,gBAAgBJ,IAMvB,qC,yBCGGK,MAdf,SAAqBP,GAAO,IAAD,EACSA,EAAMQ,QAA9BC,EADe,EACfA,KAAMC,EADS,EACTA,IAAKC,EADI,EACJA,SACbC,EAAeF,IAAQV,EAAMI,KAAKS,YAAYH,IAAM,OAAO,WAEjE,OACI,mCACI,sBAAKI,UAAS,kBAAaF,GAA3B,UACI,qBAAKG,IAAKJ,IACV,4BAAKF,UCoCNO,MAzCf,SAAkBhB,GAEd,IAAMiB,EAAcjB,EAAMkB,UAAUC,WAAW,YACzCC,EAAQH,EAAYI,QAAQ,aAAaC,MAAM,IAHjC,EAKDC,YAAkBH,EAAO,CAACI,QAAQ,OAA9CC,EALa,sBAOcC,mBAAS,IAPvB,mBAObC,EAPa,KAOFC,EAPE,KASdC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAChBD,EAAEE,iBADc,EAEShC,EAAMI,KAAKS,YAA5BH,EAFQ,EAERA,IAAIC,EAFI,EAEJA,SAFI,SAIVM,EAAYgB,IAAI,CAClBxB,KAAMkB,EACNO,UAAW/B,IAASe,UAAUiB,WAAWC,kBACzC1B,MACAC,aARY,OAUhBiB,EAAa,IACbS,EAAMC,QAAQC,eAAe,CAAEC,SAAU,WAXzB,2CAAH,sDAcXH,EAAQI,mBAEd,OACI,mCACI,gCACI,iCACMhB,GAAYA,EAASiB,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAA0BnC,QAASmC,EAAKvC,KAAMJ,EAAMI,MAAlCuC,EAAIC,OACxD,qBAAKC,IAAMR,OAEf,uBAAMS,SAAUjB,EAAhB,UACI,uBAAOkB,MAAOpB,EAAWqB,SAAU,SAAClB,GAAD,OAAKF,EAAaE,EAAEmB,OAAOF,UAC9D,wBAAQG,KAAK,SAAb,2BC1BpB/C,IAASgD,cAAc,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGnB,IAAMvD,EAAOD,IAASC,OAChBc,EAAYf,IAASe,YAuBZ0C,MArBf,WAAgB,IAAD,EAEEC,YAAazD,GAArB0D,EAFM,oBAQb,OAJAC,qBAAU,WACRC,QAAQC,IAAIH,MAIZ,sBAAKhD,UAAU,MAAf,UACE,mCACE,2CACCgD,EAAO,wBAAQ7D,QAAS,kBAAIG,EAAK8D,WAA1B,oBAAqD,yBAE/D,kCACGJ,EAAO,cAAC,EAAD,CAAU1D,KAAMA,EAAMc,UAAWA,EAAW4C,KAAMA,IAAQ,cAAC,EAAD,CAAQ1D,KAAMA,UC9BzE+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.196688b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nfunction SignIn(props){\r\n\r\n    const signInWithGoogle = () =>{\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        props.auth.signInWithPopup(provider);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>SignUp Page</h1>\r\n            <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nfunction ChatMessage(props){\r\n    const { text, uid, photoURL } = props.message;\r\n    const messageClass = uid === props.auth.currentUser.uid ? 'sent':'received';\r\n\r\n    return(\r\n        <>\r\n            <div className={`message ${messageClass}`}>\r\n                <img src={photoURL} />\r\n                <p>{ text }</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatMessage;","import React, { useRef, useState } from 'react';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport ChatMessage from './ChatMessage';\r\nimport firebase from 'firebase/app';\r\n\r\nfunction ChatRoom(props){\r\n\r\n    const messagesRef = props.firestore.collection('messages');\r\n    const query = messagesRef.orderBy('createdAt').limit(25);\r\n\r\n    const [messages] = useCollectionData(query, {idField:'id'});\r\n\r\n    const [formValue, setFormValue] = useState('');\r\n\r\n    const sendMessage = async(e)=>{\r\n        e.preventDefault();\r\n        const { uid,photoURL } = props.auth.currentUser;\r\n\r\n        await messagesRef.add({\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL\r\n        });\r\n        setFormValue('');\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    const dummy = useRef();\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <main>\r\n                    { messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} auth={props.auth} />) }\r\n                    <div ref={ dummy }></div>\r\n                </main>\r\n                <form onSubmit={sendMessage}>\r\n                    <input value={formValue} onChange={(e)=>setFormValue(e.target.value)}/>\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatRoom;","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport SignIn from './Components/SignIn';\nimport ChatRoom from './Components/ChatRoom';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCKTEaHJRbv8t0FML55XzBpFIa6aynSSgs\",\n    authDomain: \"w0rld-chat.firebaseapp.com\",\n    databaseURL: \"https://w0rld-chat.firebaseio.com\",\n    projectId: \"w0rld-chat\",\n    storageBucket: \"w0rld-chat.appspot.com\",\n    messagingSenderId: \"291093871584\",\n    appId: \"1:291093871584:web:f9606751ca4295ecb60985\",\n    measurementId: \"G-C60XF8QLJC\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  useEffect(()=>{\n    console.log(user);\n  });\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>WorldChat</h1>\n        {user ? <button onClick={()=>auth.signOut()}>Logout</button>:<p/>}\n      </header>\n      <section>\n        {user ? <ChatRoom auth={auth} firestore={firestore} user={user}/>:<SignIn auth={auth}/>}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}